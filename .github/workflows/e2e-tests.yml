name: Alore E2E Tests

on:
  push:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  e2e_tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright Browsers
        working-directory: ./tests
        run: pnpm exec playwright install --with-deps

      - name: Create .env file
        working-directory: ./tests
        run: |
          echo "GOOGLE_PWD=${{ secrets.GOOGLE_PWD }}" >> .env
          echo "NEXT_PUBLIC_ALORE_API_KEY=${{ secrets.NEXT_PUBLIC_ALORE_API_KEY }}" >> .env
          echo "NEXT_PUBLIC_ALORE_CLIENT_ID=${{ secrets.NEXT_PUBLIC_ALORE_CLIENT_ID }}" >> .env
          echo "TESTMAIL_API_KEY=${{ secrets.TESTMAIL_API_KEY }}" >> .env
          echo "${{ toJSON(vars) }}" | jq -r 'to_entries | .[] | "\(.key)=\(.value)"' >> .env

      - name: Run Playwright Tests
        working-directory: ./tests
        run: pnpm run test

      - name: Upload Playwright Report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: tests/playwright-report/
          retention-days: 30
